swagger: '2.0'
info:
  title: DevLinks API
  description: API Documentation for DevLinks
  contact:
    name: okenetega@gmail.com
  version: v1
host: localhost:8000
schemes:
- http
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /auth/register/:
    post:
      operationId: auth_register_create
      description: Register a new user.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserRegister'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
      tags:
      - auth
    parameters: []
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
      - auth
    parameters: []
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
      - auth
    parameters: []
  /schools/:
    get:
      operationId: schools_list
      description: List all schools.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/School'
      tags:
      - schools
    parameters: []
  /user/:
    get:
      operationId: user_list
      summary: Get a user's profile data.
      description: |-
        In order to view more data, the user must be logged in (authenticated) and must
        be the owner of the account.
      parameters:
      - name: email
        in: query
        description: User's email
        type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserPublic'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Request
        '404':
          description: User Not Found
      tags:
      - user
    put:
      operationId: user_update
      description: Update a user's profile information.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - email
          type: object
          properties:
            email:
              type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserPrivate'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized Request
        '404':
          description: User Not Found
      tags:
      - user
    parameters: []
definitions:
  Skill:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  UserRegister:
    required:
    - email
    - first_name
    - last_name
    - password1
    - password2
    - school
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 150
        minLength: 1
      password1:
        title: Password1
        type: string
        minLength: 1
      password2:
        title: Password2
        type: string
        minLength: 1
      school:
        title: School
        type: string
        maxLength: 100
        minLength: 1
      skills:
        type: array
        items:
          $ref: '#/definitions/Skill'
  TokenObtainPair:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  School:
    required:
    - name
    type: object
    properties:
      name:
        title: Name
        type: string
        enum:
        - University of Manitoba
        - Univerisity of Winnipeg
        - RRC Polytech
        - Universit√© de Saint-Boniface
  UserPublic:
    required:
    - skills
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      bio:
        title: Bio
        type: string
        maxLength: 255
      school:
        title: School
        type: integer
        x-nullable: true
      skills:
        type: array
        items:
          $ref: '#/definitions/Skill'
  UserPrivate:
    required:
    - skills
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 150
        minLength: 1
      school:
        title: School
        type: string
        maxLength: 100
        minLength: 1
      skills:
        type: array
        items:
          $ref: '#/definitions/Skill'
      last_login:
        title: Last login
        type: string
        format: date-time
        x-nullable: true
      is_superuser:
        title: Superuser status
        description: Designates that this user has all permissions without explicitly
          assigning them.
        type: boolean
      is_staff:
        title: Staff status
        description: Designates whether the user can log into this admin site.
        type: boolean
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      date_joined:
        title: Date joined
        type: string
        format: date-time
      username:
        title: Username
        type: string
        maxLength: 30
        x-nullable: true
      bio:
        title: Bio
        type: string
        maxLength: 255
      groups:
        description: The groups this user belongs to. A user will get all permissions
          granted to each of their groups.
        type: array
        items:
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
          type: integer
        uniqueItems: true
      user_permissions:
        description: Specific permissions for this user.
        type: array
        items:
          description: Specific permissions for this user.
          type: integer
        uniqueItems: true
